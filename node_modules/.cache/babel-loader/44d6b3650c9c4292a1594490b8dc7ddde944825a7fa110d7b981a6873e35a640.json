{"ast":null,"code":"var _jsxFileName = \"H:\\\\drift mark tecknology internship day 1\\\\company website drift mark task 5\\\\my task\\\\my-app\\\\src\\\\components\\\\ContactForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Form, Button, Container, Row, Col } from \"react-bootstrap\";\n// import \"bootstrap-icons/font/bootstrap-icons.css\"; // Import Bootstrap Icons\n// import \"./ContactForm.css\"; // Import custom styles for animated border\n\n// function ContactForm() {\n//   const initialFormState = {\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     password: \"\",\n//     message: \"\",\n//     isRobot: false,\n//   };\n\n//   const [formData, setFormData] = useState(initialFormState);\n//   const [errors, setErrors] = useState({});\n//   const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!formData.firstName.trim()) newErrors.firstName = \"First name is required.\";\n//     if (!formData.email.trim()) {\n//       newErrors.email = \"Email is required.\";\n//     } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n//       newErrors.email = \"Enter a valid email address.\";\n//     }\n//     if (!formData.password.trim()) newErrors.password = \"Password is required.\";\n//     if (!formData.lastName.trim()) newErrors.lastName = \"LastName is required.\";\n//     if (!formData.isRobot) newErrors.isRobot = \"You must confirm you are not a robot.\";\n//     return newErrors;\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const validationErrors = validate();\n//     if (Object.keys(validationErrors).length > 0) {\n//       setErrors(validationErrors);\n//     } else {\n//       setErrors({});\n//       alert(\"Form submitted successfully!\");\n//       setFormData(initialFormState); // Clear the input fields after submission\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value, type, checked } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: type === \"checkbox\" ? checked : value,\n//     });\n//   };\n\n//   return (\n//     <Container>\n//       <div className=\"form-container\">\n//         <Form onSubmit={handleSubmit} >\n//           {/* Input Fields */}\n//           {[\n//             { label: \"First Name\", name: \"firstName\", required: true },\n//             { label: \"Last Name\", name: \"lastName\", required: true },\n//             { label: \"Email\", name: \"email\", required: true },\n//           ].map(({ label, name, required }, index) => (\n//             <Form.Group controlId={name} key={index} className=\"mb-3\">\n//               <Form.Label style={{ color: \"blue\" }}>\n//                 {label} {required && <span style={{ color: \"red\" }}>*</span>}\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 name={name}\n//                 value={formData[name]}\n//                 onChange={handleChange}\n//                 placeholder={`Enter ${label.toLowerCase()}`}\n//                 style={{\n//                   borderColor: errors[name] ? \"red\" : \"skyblue\",\n//                   borderWidth: \"2px\",\n//                 }}\n//               />\n//               {errors[name] && (\n//                 <Form.Text className=\"text-danger\">{errors[name]}</Form.Text>\n//               )}\n//             </Form.Group>\n//           ))}\n\n//           {/* Password Field with Eye Icon */}\n//           <Form.Group controlId=\"password\" className=\"mb-3\">\n//             <Form.Label style={{ color: \"blue\" }}>\n//               Password <span style={{ color: \"red\" }}>*</span>\n//             </Form.Label>\n//             <div style={{ position: \"relative\" }}>\n//               <Form.Control\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 name=\"password\"\n//                 value={formData.password}\n//                 onChange={handleChange}\n//                 placeholder=\"Enter password\"\n//                 style={{\n//                   borderColor: errors.password ? \"red\" : \"skyblue\",\n//                   borderWidth: \"2px\",\n//                   paddingRight: \"40px\", // Extra space for the icon\n//                 }}\n//               />\n//               <i\n//                 className={`bi ${showPassword ? \"bi-eye-fill\" : \"bi-eye-slash-fill\"}`}\n//                 onClick={() => setShowPassword(!showPassword)}\n//                 style={{\n//                   position: \"absolute\",\n//                   top: \"50%\",\n//                   right: \"10px\",\n//                   transform: \"translateY(-50%)\",\n//                   cursor: \"pointer\",\n//                   fontSize: \"1.2rem\",\n//                   color: \"gray\",\n//                 }}\n//                 title={showPassword ? \"Hide Password\" : \"Show Password\"}\n//               />\n//             </div>\n//             {errors.password && (\n//               <Form.Text className=\"text-danger\">{errors.password}</Form.Text>\n//             )}\n//           </Form.Group>\n\n//           {/* Message Field */}\n//           <Form.Group controlId=\"message\" className=\"mb-3\">\n//             <Form.Label style={{ color: \"blue\" }}>\n//               Message (Optional)\n//             </Form.Label>\n//             <Form.Control\n//               as=\"textarea\"\n//               rows={3}\n//               name=\"message\"\n//               value={formData.message}\n//               onChange={handleChange}\n//               placeholder=\"Enter your message\"\n//               style={{\n//                 borderColor: errors.message ? \"red\" : \"skyblue\",\n//                 borderWidth: \"2px\",\n//               }}\n//             />\n//             {errors.message && (\n//               <Form.Text className=\"text-danger\">{errors.message}</Form.Text>\n//             )}\n//           </Form.Group>\n\n//           {/* \"I am not a robot\" Section */}\n//           <Form.Group controlId=\"robotCheck\" className=\"mb-4\">\n//             <Row className=\"align-items-center\">\n//               <Col xs=\"auto\">\n//                 <Form.Check\n//                   type=\"checkbox\"\n//                   name=\"isRobot\"\n//                   checked={formData.isRobot}\n//                   onChange={handleChange}\n//                   className=\"me-2\"\n//                 />\n//               </Col>\n//               <Col>\n//                 <Form.Label className=\"mb-0\">I am not a robot</Form.Label>\n//               </Col>\n//             </Row>\n//             {errors.isRobot && (\n//               <Form.Text className=\"text-danger\">{errors.isRobot}</Form.Text>\n//             )}\n//           </Form.Group>\n\n//           {/* Submit Button */}\n//           <Button className=\"btn btn-primary btn-lg\"  type=\"submit\">\n//             Submit\n//           </Button>\n//         </Form>\n//       </div>\n//     </Container>\n//   );\n// }\n\n// export default ContactForm;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    message: \"\",\n    isRobot: false\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!formData.isRobot) {\n      alert(\"Please confirm you are not a robot.\");\n      return;\n    }\n    alert(\"Form submitted successfully!\");\n    setFormData({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      message: \"\",\n      isRobot: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"500px\",\n      margin: \"0 auto\",\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          style: {\n            display: \"block\",\n            marginBottom: \"5px\"\n          },\n          children: [\"First Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          value: formData.firstName,\n          onChange: handleChange,\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"8px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          style: {\n            display: \"block\",\n            marginBottom: \"5px\"\n          },\n          children: [\"Last Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          value: formData.lastName,\n          onChange: handleChange,\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"8px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          style: {\n            display: \"block\",\n            marginBottom: \"5px\"\n          },\n          children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"8px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          style: {\n            display: \"block\",\n            marginBottom: \"5px\"\n          },\n          children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"8px\",\n              border: \"1px solid #ccc\",\n              paddingRight: \"40px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `bi ${showPassword ? \"bi-eye-fill\" : \"bi-eye-slash-fill\"}`,\n            onClick: () => setShowPassword(!showPassword),\n            style: {\n              position: \"absolute\",\n              top: \"50%\",\n              right: \"10px\",\n              transform: \"translateY(-50%)\",\n              cursor: \"pointer\",\n              fontSize: \"1.2rem\",\n              color: \"gray\"\n            },\n            title: showPassword ? \"Hide Password\" : \"Show Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          style: {\n            display: \"block\",\n            marginBottom: \"5px\"\n          },\n          children: \"Message (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          name: \"message\",\n          value: formData.message,\n          onChange: handleChange,\n          rows: \"4\",\n          style: {\n            width: \"100%\",\n            padding: \"8px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"isRobot\",\n            checked: formData.isRobot,\n            onChange: handleChange,\n            style: {\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), \"I am not a robot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          display: \"block\",\n          width: \"100%\",\n          padding: \"10px\",\n          backgroundColor: \"#007BFF\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactForm, \"Y8VzaWpApS9NI36YMhnXwSBZGtk=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ContactForm","_s","formData","setFormData","firstName","lastName","email","password","message","isRobot","handleChange","e","name","value","type","checked","target","handleSubmit","preventDefault","alert","style","maxWidth","margin","padding","children","onSubmit","marginBottom","htmlFor","display","color","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","required","width","border","position","showPassword","paddingRight","className","onClick","setShowPassword","top","right","transform","cursor","fontSize","title","rows","marginRight","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["H:/drift mark tecknology internship day 1/company website drift mark task 5/my task/my-app/src/components/ContactForm.js"],"sourcesContent":["\n\n\n\n\n// import React, { useState } from \"react\";\n// import { Form, Button, Container, Row, Col } from \"react-bootstrap\";\n// import \"bootstrap-icons/font/bootstrap-icons.css\"; // Import Bootstrap Icons\n// import \"./ContactForm.css\"; // Import custom styles for animated border\n\n// function ContactForm() {\n//   const initialFormState = {\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     password: \"\",\n//     message: \"\",\n//     isRobot: false,\n//   };\n\n//   const [formData, setFormData] = useState(initialFormState);\n//   const [errors, setErrors] = useState({});\n//   const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!formData.firstName.trim()) newErrors.firstName = \"First name is required.\";\n//     if (!formData.email.trim()) {\n//       newErrors.email = \"Email is required.\";\n//     } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n//       newErrors.email = \"Enter a valid email address.\";\n//     }\n//     if (!formData.password.trim()) newErrors.password = \"Password is required.\";\n//     if (!formData.lastName.trim()) newErrors.lastName = \"LastName is required.\";\n//     if (!formData.isRobot) newErrors.isRobot = \"You must confirm you are not a robot.\";\n//     return newErrors;\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const validationErrors = validate();\n//     if (Object.keys(validationErrors).length > 0) {\n//       setErrors(validationErrors);\n//     } else {\n//       setErrors({});\n//       alert(\"Form submitted successfully!\");\n//       setFormData(initialFormState); // Clear the input fields after submission\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value, type, checked } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: type === \"checkbox\" ? checked : value,\n//     });\n//   };\n\n//   return (\n//     <Container>\n//       <div className=\"form-container\">\n//         <Form onSubmit={handleSubmit} >\n//           {/* Input Fields */}\n//           {[\n//             { label: \"First Name\", name: \"firstName\", required: true },\n//             { label: \"Last Name\", name: \"lastName\", required: true },\n//             { label: \"Email\", name: \"email\", required: true },\n//           ].map(({ label, name, required }, index) => (\n//             <Form.Group controlId={name} key={index} className=\"mb-3\">\n//               <Form.Label style={{ color: \"blue\" }}>\n//                 {label} {required && <span style={{ color: \"red\" }}>*</span>}\n//               </Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 name={name}\n//                 value={formData[name]}\n//                 onChange={handleChange}\n//                 placeholder={`Enter ${label.toLowerCase()}`}\n//                 style={{\n//                   borderColor: errors[name] ? \"red\" : \"skyblue\",\n//                   borderWidth: \"2px\",\n//                 }}\n//               />\n//               {errors[name] && (\n//                 <Form.Text className=\"text-danger\">{errors[name]}</Form.Text>\n//               )}\n//             </Form.Group>\n//           ))}\n\n//           {/* Password Field with Eye Icon */}\n//           <Form.Group controlId=\"password\" className=\"mb-3\">\n//             <Form.Label style={{ color: \"blue\" }}>\n//               Password <span style={{ color: \"red\" }}>*</span>\n//             </Form.Label>\n//             <div style={{ position: \"relative\" }}>\n//               <Form.Control\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 name=\"password\"\n//                 value={formData.password}\n//                 onChange={handleChange}\n//                 placeholder=\"Enter password\"\n//                 style={{\n//                   borderColor: errors.password ? \"red\" : \"skyblue\",\n//                   borderWidth: \"2px\",\n//                   paddingRight: \"40px\", // Extra space for the icon\n//                 }}\n//               />\n//               <i\n//                 className={`bi ${showPassword ? \"bi-eye-fill\" : \"bi-eye-slash-fill\"}`}\n//                 onClick={() => setShowPassword(!showPassword)}\n//                 style={{\n//                   position: \"absolute\",\n//                   top: \"50%\",\n//                   right: \"10px\",\n//                   transform: \"translateY(-50%)\",\n//                   cursor: \"pointer\",\n//                   fontSize: \"1.2rem\",\n//                   color: \"gray\",\n//                 }}\n//                 title={showPassword ? \"Hide Password\" : \"Show Password\"}\n//               />\n//             </div>\n//             {errors.password && (\n//               <Form.Text className=\"text-danger\">{errors.password}</Form.Text>\n//             )}\n//           </Form.Group>\n\n//           {/* Message Field */}\n//           <Form.Group controlId=\"message\" className=\"mb-3\">\n//             <Form.Label style={{ color: \"blue\" }}>\n//               Message (Optional)\n//             </Form.Label>\n//             <Form.Control\n//               as=\"textarea\"\n//               rows={3}\n//               name=\"message\"\n//               value={formData.message}\n//               onChange={handleChange}\n//               placeholder=\"Enter your message\"\n//               style={{\n//                 borderColor: errors.message ? \"red\" : \"skyblue\",\n//                 borderWidth: \"2px\",\n//               }}\n//             />\n//             {errors.message && (\n//               <Form.Text className=\"text-danger\">{errors.message}</Form.Text>\n//             )}\n//           </Form.Group>\n\n//           {/* \"I am not a robot\" Section */}\n//           <Form.Group controlId=\"robotCheck\" className=\"mb-4\">\n//             <Row className=\"align-items-center\">\n//               <Col xs=\"auto\">\n//                 <Form.Check\n//                   type=\"checkbox\"\n//                   name=\"isRobot\"\n//                   checked={formData.isRobot}\n//                   onChange={handleChange}\n//                   className=\"me-2\"\n//                 />\n//               </Col>\n//               <Col>\n//                 <Form.Label className=\"mb-0\">I am not a robot</Form.Label>\n//               </Col>\n//             </Row>\n//             {errors.isRobot && (\n//               <Form.Text className=\"text-danger\">{errors.isRobot}</Form.Text>\n//             )}\n//           </Form.Group>\n\n//           {/* Submit Button */}\n//           <Button className=\"btn btn-primary btn-lg\"  type=\"submit\">\n//             Submit\n//           </Button>\n//         </Form>\n//       </div>\n//     </Container>\n//   );\n// }\n\n// export default ContactForm;\n\n\n\nimport React, { useState } from \"react\";\n\n\nfunction ContactForm() {\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    message: \"\",\n    isRobot: false,\n  });\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.isRobot) {\n      alert(\"Please confirm you are not a robot.\");\n      return;\n    }\n    alert(\"Form submitted successfully!\");\n    setFormData({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      message: \"\",\n      isRobot: false,\n    });\n  };\n\n  return (\n    <div style={{ maxWidth: \"500px\", margin: \"0 auto\", padding: \"20px\" }}>\n      <form onSubmit={handleSubmit}>\n        {/* First Name */}\n        <div style={{ marginBottom: \"15px\" }}>\n          <label htmlFor=\"firstName\" style={{ display: \"block\", marginBottom: \"5px\" }}>\n            First Name <span style={{ color: \"red\" }}>*</span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            name=\"firstName\"\n            value={formData.firstName}\n            onChange={handleChange}\n            required\n            style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #ccc\" }}\n          />\n        </div>\n\n        {/* Last Name */}\n        <div style={{ marginBottom: \"15px\" }}>\n          <label htmlFor=\"lastName\" style={{ display: \"block\", marginBottom: \"5px\" }}>\n            Last Name <span style={{ color: \"red\" }}>*</span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            name=\"lastName\"\n            value={formData.lastName}\n            onChange={handleChange}\n            required\n            style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #ccc\" }}\n          />\n        </div>\n\n        {/* Email */}\n        <div style={{ marginBottom: \"15px\" }}>\n          <label htmlFor=\"email\" style={{ display: \"block\", marginBottom: \"5px\" }}>\n            Email <span style={{ color: \"red\" }}>*</span>\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n            style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #ccc\" }}\n          />\n        </div>\n\n        {/* Password */}\n        {/* <div style={{ marginBottom: \"15px\" }}>\n          <label htmlFor=\"password\" style={{ display: \"block\", marginBottom: \"5px\" }}>\n            Password <span style={{ color: \"red\" }}>*</span>\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n            style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #ccc\" }}\n          /> \n          </div>*/}\n\n          {/* Password Field with Show/Hide Icon */}\n        <div style={{ marginBottom: \"15px\" }}>\n          <label htmlFor=\"password\" style={{ display: \"block\", marginBottom: \"5px\" }}>\n            Password <span style={{ color: \"red\" }}>*</span>\n          </label>\n          <div style={{ position: \"relative\" }}>\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n              style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #ccc\", paddingRight: \"40px\" }}\n            />\n           <i\n              className={`bi ${showPassword ? \"bi-eye-fill\" : \"bi-eye-slash-fill\"}`}\n              onClick={() => setShowPassword(!showPassword)}\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                right: \"10px\",\n                transform: \"translateY(-50%)\",\n                cursor: \"pointer\",\n                fontSize: \"1.2rem\",\n                color: \"gray\",\n              }}\n              title={showPassword ? \"Hide Password\" : \"Show Password\"}\n            />\n          </div>\n        </div>\n\n        {/* Message */}\n        <div style={{ marginBottom: \"15px\" }}>\n          <label htmlFor=\"message\" style={{ display: \"block\", marginBottom: \"5px\" }}>\n            Message (Optional)\n          </label>\n          <textarea\n            id=\"message\"\n            name=\"message\"\n            value={formData.message}\n            onChange={handleChange}\n            rows=\"4\"\n            style={{ width: \"100%\", padding: \"8px\", border: \"1px solid #ccc\" }}\n          ></textarea>\n        </div>\n\n        {/* \"I am not a robot\" */}\n        <div style={{ marginBottom: \"15px\" }}>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"isRobot\"\n              checked={formData.isRobot}\n              onChange={handleChange}\n              style={{ marginRight: \"10px\" }}\n            />\n            I am not a robot\n          </label>\n        </div>\n\n        {/* Submit Button */}\n        <button\n          type=\"submit\"\n          style={{\n            display: \"block\",\n            width: \"100%\",\n            padding: \"10px\",\n            backgroundColor: \"#007BFF\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n          }}\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}